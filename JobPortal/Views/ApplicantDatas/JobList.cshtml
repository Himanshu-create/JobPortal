@model IEnumerable<JobDetails>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

	
<input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names..">



<table class="table" id= "myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.jobName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Domain)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastDateOfRegistration)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.jobName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Domain)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastDateOfRegistration)
            </td>
            <td>
                <a asp-action="Create" asp-route-id="@item.Id">Apply</a> 
            </td>
        </tr>
}
    </tbody>
</table>

<script>
    function myFunction() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            //console.log(td);
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
